<!DOCTYPE document PUBLIC
        "-//Apache Software Foundation//DTD XDOC 1.0//EN"
        "http://maven.apache.org/dtd/xdoc_1_0.dtd">
<document>
    <properties>
        <title>MyDoggy - My Java Docking Framework (PLAF) : Transparency</title>
        <author email="adecaro@users.sourceforge.net">Angelo De Caro</author>
    </properties>

    <body>
        <section name="TransparencyManager">
            <table>
                <tbody>
                    <tr>
                        <td>
                            <img src="./../images/plaf/tw_transparency.png" alt="ToolWindow Transparency" border="0" hspace="18"/>
                        </td>
                        <td>
                            <p>
                                Using the <code>org.noos.xing.mydoggy.plaf.ui.transparency.TransparencyManager</code> interface
                                MyDoggy can manage the transparency of any detached window.
                                <br/>
                                Specifically, when a toolwindow (with FLOATING of FLOATING_FREE type) or a detached content losts
                                the focus, it becomes transparent in a few milliseconds.
                                <br/>
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>

            <subsection name="Use JNA">
                <p>
                    JNA provides Java programs easy access to native shared libraries (e.g. DLLs on Windows) without
                    writing anything but Java code, no JNI or native code is required. This functionality is
                    comparable to Windows' Platform/Invoke and Python's ctypes. Access is dynamic at runtime without
                    code generation.
                    <br/>
                    You can found it at
                    <a href="https://jna.dev.java.net/">https://jna.dev.java.net/</a><br/>

                    To use JNA for transparency purpose you can use the following class...
                </p>

                <source xml:space="preserve">
import com.sun.jna.examples.WindowUtils;

import java.awt.*;
import java.util.Map;
import java.util.WeakHashMap;

public class JNAWindowTransparencyManager implements TransparencyManager&lt;Window&gt; {

    private boolean available;
    private Map&lt;Window, Float&gt; windowTransparencies;

    public JNAWindowTransparencyManager() {
        initTransparencyManager();
    }

    public boolean isServiceAvailable() {
        return available;
    }

    public void setAlphaModeRatio(Window component, float transparency) {
        if (available) {
            windowTransparencies.put(component, transparency);
            WindowUtils.setWindowAlpha(component, transparency);
        }
    }

    public boolean isAlphaModeEnabled(Window component) {
        if (available) {
            Float transparency = windowTransparencies.get(component);
            return transparency != null &amp;&amp; transparency &gt;= 0.0;
        }
        return false;
    }

    protected void initTransparencyManager() {
        available = false;
        try {
            Class.forName("com.sun.jna.examples.WindowUtils");
            available = WindowUtils.isWindowAlphaSupported();
            if (available)
                this.windowTransparencies = new WeakHashMap&lt;Window, Float&gt;();
        } catch (ClassNotFoundException e) {}
    }

}</source>

                <p>
                    To integrate the above manager in MyDoggy use the following.
                </p>
                <source xml:space="preserve">
MyDoggyToolWindowManager myDoggyToolWindowManager = new MyDoggyToolWindowManager(...);
myDoggyToolWindowManager.getResourceManager().setTransparencyManager(
        new JNAWindowTransparencyManager()
);</source>
            </subsection>
        </section>

    </body>
</document>
