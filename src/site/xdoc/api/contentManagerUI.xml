<!DOCTYPE document PUBLIC
        "-//Apache Software Foundation//DTD XDOC 1.0//EN"
        "http://maven.apache.org/dtd/xdoc_1_0.dtd">
<document>
    <properties>
        <title>MyDoggy - My Java Docking Framework (API) : ContentManagerUI</title>
        <author email="adecaro@users.sourceforge.net">Angelo De Caro</author>
    </properties>

    <body>

        <section name="ContentManagerUI">
            <p>
                A ContentManagerUI is an interface to modify the ui behaviours of
                a content manager. For example this is used to modify the way a content
                is shown.
            </p>
            <a name="MyDoggyMultiSplitContentManagerUI"/>
            <subsection name="MyDoggyMultiSplitContentManagerUI">
                <table>
                    <tbody>
                        <tr>
                            <td>
                                <img src="./../images/plaf/multisplitContentManagerUI.png" alt="MultisplitContentManagerUI"
                                     border="0" hspace="18"/>
                            </td>
                            <td>
                                <p>
                                    This interface represents a ui that use a component that lets the user switch
                                    between
                                    a group of components by clicking on a tab with a given title and/or icon. The
                                    position of each tab can be customized from the ui or by code.
                                    <br/>To obtain and set a specific instance use the following (for example):
                                </p>
                                <source>import org.noos.xing.mydoggy.plaf.ui.content;
...
contentManager.setContentManagerUI(new MyDoggyMultiSplitContentManagerUI());
                                </source>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </subsection>
            <a name="MyDoggyTabbedContentManagerUI"/>
            <subsection name="MyDoggyTabbedContentManagerUI">
                <table>
                    <tbody>
                        <tr>
                            <td>
                                <img src="./../images/plaf/tabbedContentManagerUI.png" alt="TabbedContentManagerUI" border="0"
                                     hspace="18"/>
                            </td>
                            <td>
                                <p>
                                    This interface represents a ui that use a component that lets the user switch
                                    between
                                    a group of components by clicking on a tab with a given title and/or icon (i.e.
                                    JTabbedPane).
                                    <br/>To obtain and set a specific instance use the following (for example):
                                </p>
                                <source>import org.noos.xing.mydoggy.plaf.ui.content;
...
contentManager.setContentManagerUI(new MyDoggyTabbedContentManagerUI());
                                </source>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </subsection>
            <a name="MyDoggyDesktopContentManagerUI"/>
            <subsection name="MyDoggyDesktopContentManagerUI">
                <table>
                    <tbody>
                        <tr>
                            <td>
                                <img src="./../images/plaf/desktopContentManagerUI.png" alt="DesktopContentManagerUI" border="0"
                                     hspace="18"/>
                            </td>
                            <td>
                                <p>
                                    This interface represents a ui that use a container to create a multiple-document
                                    interface
                                    or a virtual desktop.
                                    <br/>To obtain and set a specific instance use the following (for example):
                                </p>
                                <source>import org.noos.xing.mydoggy.plaf.ui.content;
...
contentManager.setContentManagerUI(new MyDoggyDesktopContentManagerUI());
                                </source>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </subsection>
        </section>

        <section name="TabbedContentManagerUI">
			<table>
				<tbody>
					<tr>
						<td>
							<img src="../images/api/tabbedContentManagerUI.png" alt="ContentManager" border="0" hspace="18"/>
						</td>
						<td>
							<p>
								This interface represents a ui that use a component that lets the user switch between
								a group of components by clicking on a tab with a given title and/or icon (i.e. JTabbedPane).
							</p>
						</td>
					</tr>
				</tbody>
			</table>
        </section>

        <section name="DesktopContentManagerUI">
			<table>
				<tbody>
					<tr>
						<td>
							<img src="../images/api/desktopContentManagerUI.png" alt="ContentManager" border="0" hspace="18"/>
						</td>
						<td>
							<p>
								This interface represents a ui that use a container to create a multiple-document interface
								or a virtual desktop.
							</p>
						</td>
					</tr>
				</tbody>
			</table>
        </section>

        <section name="Your own implementation">
            <p>
                If you want to implement your own
                <code>ContentManageUI,</code>
                your class must implement non only the
                <code>ContentManageUI</code>
                interface but also the
                <code>PlafContentManagerUI</code>
                interface in the
                package<code>org.noos.xing.mydoggy.plaf.ui.content</code>.
                <br/>
                This is to provide all neccesary methods to use the manager.
            </p>
        </section>

        <section name="ContentManagerUI">
            <p>
                A ContentManagerUI is an interface to modify the ui behaviours of a content manager. See the related
                <a href="./../mydoggy-plaf/contentManagerUI.html">page</a>
                in the plaf module for the how-to mount a ContentManagerUI and how implement one by yourself.
                <br/>
                MyDoggy provides three kind of ContentManagerUI...</p>

            <a name="MyDoggyMultiSplitContentManagerUI"/>
            <subsection name="MyDoggyMultiSplitContentManagerUI">
                <table>
                    <tbody>
                        <tr>
                            <td>
                                <img src="../images/api/multisplitContentManagerUI.png" alt="MultisplitContentManagerUI"
                                     border="0" hspace="18"/>
                            </td>
                            <td>
                                <p>
                                    This interface represents a ui that use a component that lets the user switch
                                    between
                                    a group of components by clicking on a tab with a given title and/or icon. The
                                    position of each tab can be customized from the ui or by code.
                                </p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </subsection>
            <a name="MyDoggyTabbedContentManagerUI"/>
            <subsection name="MyDoggyTabbedContentManagerUI">
                <table>
                    <tbody>
                        <tr>
                            <td>
                                <img src="../images/api/tabbedContentManagerUI.png" alt="TabbedContentManagerUI" border="0"
                                     hspace="18"/>
                            </td>
                            <td>
                                <p>
                                    This interface represents a ui that use a component that lets the user switch
                                    between
                                    a group of components by clicking on a tab with a given title and/or icon (i.e.
                                    JTabbedPane).
                                </p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </subsection>
            <a name="MyDoggyDesktopContentManagerUI"/>
            <subsection name="MyDoggyDesktopContentManagerUI">
                <table>
                    <tbody>
                        <tr>
                            <td>
                                <img src="../images/api/desktopContentManagerUI.png" alt="DesktopContentManagerUI" border="0"
                                     hspace="18"/>
                            </td>
                            <td>
                                <p>
                                    This interface represents a ui that use a container to create a multiple-document
                                    interface
                                    or a virtual desktop.
                                </p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </subsection>

            <p>
                If you want to change the ContentManagerUI use the following :
            </p>
            <source>ToolWindowManager toolWindowManager = new<a href="./../mydoggy-plaf/index.html">...</a>;
ContentManager contentManager = toolWindowManager.getContentManager();
ContentManagerUI contentManagerUI = new
<a href="./../mydoggy-plaf/index.html#ContentManageUI">... TODO</a>
contentManager.setContentManagerUI(contentManagerUI);
            </source>
        </section>

        <section name="ContentUI">
            <p>
                This interface is used to modify the ui behaviours of a single content. When you define a new
                ContentManagerUI you can also extend the ContentUI interface. In fact relative to
                <a href="./apidocs/org/noos/xing/mydoggy/TabbedContentManagerUI.html">TabbedContentManagerUI</a>,
                <a href="./apidocs/org/noos/xing/mydoggy/DesktopContentManagerUI.html">DesktopContentManagerUI</a> and
                <a href="./apidocs/org/noos/xing/mydoggy/MultiSplitContentManagerUI.html">MultiSplitContentManagerUI</a>
                you can found
                <a href="./apidocs/org/noos/xing/mydoggy/TabbedContentUI.html">TabbedContentUI</a>,
                <a href="./apidocs/org/noos/xing/mydoggy/DesktopContentUI.html">DesktopContentUI</a> and
                <a href="./apidocs/org/noos/xing/mydoggy/MultiSplitContentUI.html">MultiSplitContentUI </a>interfaces.
                Using the default ContentUI interface you can manage transparent support and decide if a content is
                closeable and/or detachable using the ui.
            </p>
        </section>

        <section name="Using ContentManagerUI">
            <subsection name="To obtain the instance of ContentManagerUI">
                Use the following :
                <source>
ContentManagerUI contentManagerUI = toolWindowManager.getContentManager().getContentManagerUI();
</source>
                <p>
                    Returns the content manager ui.
                </p>
            </subsection>
            <subsection name="To change ContentManagerUI">
                Use the following :
                <source>
toolWindowManager.getContentManager().setContentManagerUI(new MyDoggyDesktopContentManagerUI());
</source>
                <p>
                    Sets the content manager ui.
                </p>
            </subsection>
            <subsection name="To set 'Closeable' and 'Detachable' property">
                Use the following :
                <source>
ContentManagerUI contentManagerUI = toolWindowManager.getContentManager().getContentManagerUI();
contentManagerUI.setCloseable(true);
contentManagerUI.setsetDetachable(true);
</source>
                <p>
                    Sets the 'Closeable' and/or 'Detachable' property of all contents registered to content manager.
                </p>
            </subsection>
            <subsection name="To add a ContentManagerUIListener">
                Use the following :
                <source>
ContentManagerUI contentManagerUI = toolWindowManager.getContentManager().getContentManagerUI();
contentManagerUI.addContentManagerUIListener(listener);
</source>
                <p>
                    Registers <code>listener</code> so that it will receive events when
                    a content is removed or detached using the ui. For the remove action you can apply a veto to the action.
                    If listener <code>listener</code> is <code>null</code>,
                    no exception is thrown and no action is performed.
                </p>
            </subsection>
        </section>

        <section name="Using ContentUI">
            <subsection name="To retrieve the ContentUI for a Content">
                Use the following :
                <source>
ContentManagerUI contentManagerUI = toolWindowManager.getContentManager().getContentManagerUI();
Content content = toolWindowManager.getContentManager().getContent(0);
ContentUI contentUi = contentManagerUI.getContentUI(content);
</source>
                <p>
                    Returns the ui part to which this manager maps the specified <code>content</code>.
                </p>
            </subsection>

            <subsection name="To retrieve the Content from a ContentUI">
                Use the following :
                <source>
ContentManagerUI contentManagerUI = toolWindowManager.getContentManager().getContentManagerUI();
Content content = toolWindowManager.getContentManager().getContent(0);
ContentUI contentUi = contentManagerUI.getContentUI(content);
assert contentUi.getContent() == content;
</source>
                <p>
                    Returns the Content contropart of a ContentUI instance.
                </p>
            </subsection>
            <subsection name="To set 'Closeable' and 'Detachable' property">
                Use the following :
                <source>
ContentManagerUI contentManagerUI = toolWindowManager.getContentManager().getContentManagerUI();
Content content = toolWindowManager.getContentManager().getContent(0);
ContentUI contentUi = contentManagerUI.getContentUI(content);
contentUi.setCloseable(true);
contentUi.setDetachable(true);
</source>
                <p>
                    Sets the 'Closeable' and/or 'Detachable' property of a specific ContentUI.
                </p>
            </subsection>
            <subsection name="To customize transparency support.">
                Use the following :
                <source>
ContentManagerUI contentManagerUI = toolWindowManager.getContentManager().getContentManagerUI();
Content content = toolWindowManager.getContentManager().getContent(0);
ContentUI contentUi = contentManagerUI.getContentUI(content);
contentUi.setTransparentMode(true);
contentUi.setTransparentRatio(0.7f);
contentUi.setTransparentDelay(1000);
</source>
                <p>
                    Sets the transparent mode. If the transparent mode is enabled then when
                    the content is detached and the window containing the content losts
                    the focus then the window becomes transparent. This facility is os-dependent.
                </p>
            </subsection>

        </section>
    </body>
</document>
