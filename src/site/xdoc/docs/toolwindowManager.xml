<!DOCTYPE document PUBLIC
        "-//Apache Software Foundation//DTD XDOC 1.0//EN"
        "http://maven.apache.org/dtd/xdoc_1_0.dtd">
<document>
    <properties>
        <title>MyDoggy - My Java Docking Framework : ToolWindowManager</title>
        <author email="adecaro@users.sourceforge.net">Angelo De Caro</author>
    </properties>

    <body>
        <section name="Table of Contents">
            <ol type="1">
                <li>
                    <a href="#ToolWindowManager">What is a ToolWindowManager?
                    </a>
                </li>
                <li>
                    <a href="#ToolWindow">What is a ToolWindow?
                    </a>
                </li>
                <li>
                    <a href="#ToolWindowTab">What is a ToolWindowTab?
                    </a>
                </li>
                <li>
                    <a href="#ToolWindowTypes">What is a ToolWindowType?
                    </a>
                </li>
                <li>
                    <a href="#ToolWindowGroup">What is a ToolWindowGroup?
                    </a>
                </li>
                <li>
                    <a href="#ToolWindowAction">What is a ToolWindowAction?
                    </a>
                </li>
                <li>
                    <a href="#ToolWindowManagerDescriptor">What is a ToolWindowManagerDescriptor?
                    </a>
                </li>
                <li>
                    <a href="#PersistenceDelegate">What is a PersistenceDelegate?
                    </a>
                </li>
            </ol>

        </section>

        <a name="ToolWindowManager"/>
        <section name="ToolWindowManager">
            <p>
                This interface is the main entry point to manage MyDoggy. Using this interface
                the user can register/unregister toolwindows, groups and so on.
                Furthermore, the user can obtain the content manager and type descriptor templates.
                <br/>
            </p>


            <p> ToolWindowManagerDescriptor
                This interface is used to modify the behaviours of the ToolWindowManager.
                <br/>
                You can now change the push-away mode of toolwindows and set corner components.
                See Using page for how to.
            </p>
        </section>

        <a name="ToolWindow"/>
        <section name="What is a ToolWindow?">
            <p>
                A Tool Window is a secondary window used to organize the user interface.
            </p>

            <table>
                <tbody>
                    <tr>
                        <td>
                            <img src="../images/toolwindow.png" alt="ToolWindow" border="0"/>
                        </td>
                        <td>
                            <p align="center">
                                To register a tool window use the following:
                            </p>
                            <source>ToolWindowManager toolWindowManager = new<a href="./../mydoggy-plaf/index.html">...</a>;
ToolWindow toolwindow = toolWindowManager.registerToolWindow(
    "Debug",        // Tool Window identifier
    "Debugging",    // Tool Window Title
    icon,           // Tool Window Icon
    component,      // Tool Window Component
    ToolWindowAnchor.LEFT // Tool Window Anchor
)
                            </source>
                            <p>
                                When you register a toolwindow you obtain an instance of the ToolWindow interface.
                                This interface is the main entry point to modify toolwindow's properties.
                                Moreover there are methods to make the tool available, visible and active.
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>

        </section>

        <a name="ToolWindowTab"/>
        <section name="What is a ToolWindowTab?">
            <p>
                Every toolwindow can be considered as a special JTabbedPane and so it can contain more than one
                component.
                Every tab is described by a title, an icon and a component. A tab can be selected or not.
                <br/>
                The above image shows two tabs for the same toolwindow. The first one is declared when the tool
                is registered, for the second one use the following:
            </p>
            <source>ToolWindowTab profilingTab = toolwindow.addToolWindowTab(
                "Profiling", // Tab Title
                profilingCmp, // Tab Component
                )
            </source>
            <p>
                Also, the user can add a toolwindow to another tool as a tab. Use the following
            </p>
            <source>ToolWindowTab profilingTab = toolwindow.addToolWindowTab(profilingToolWindow)</source>
        </section>

        <a name="ToolWindowTypes"/>
        <section name="What is a ToolWindowType?">
            <p>
                A toolwindow can be shown in several ways
                depending on the toolwindow type set.
                Furthermore, using the
                <code>ToolWindowTypeDescriptor</code>
                interfaces it is possible to modify
                the behaviours of a specific toolwindow type.

                Let's describe the types provided by mydoggy.
            </p>

            <p>
            </p>

            <subsection name="Docked">
                <img src="../images/api/types/docked.png" alt="docked" border="0" hspace="18" align="left"/>

                <a href="./apidocs/org/noos/xing/mydoggy/ToolWindowType.html">
                    <code>ToolWindowType.DOCKED</code>
                </a>
                <p>
                    When DOCKED type is used, the toolwindow shares frame space and fixes to a docking
                    area along one of the tool window bars (the one containing the corresponding representative
                    button).
                    <br/>To set
                    <code>ToolWindowType.DOCKED</code>
                    type use the following:
                </p>
                <source>toolWindow.setType(ToolWindowType.DOCKED);</source>
                <p>
                    To get a
                    <a href="./apidocs/org/noos/xing/mydoggy/DockedTypeDescriptor.html">
                        <code>DockedTypeDescriptor</code>
                    </a>
                    instance use the following:
                </p>
                <source>DockedTypeDescriptor descriptor =
    toolWindow.getTypeDescriptor(DockedTypeDescriptor.class);</source>
            </subsection>

            <subsection name="Sliding">
                <img src="../images/api/types/sliding.png" alt="docked" border="0" hspace="18" align="left"/>

                <a href="./apidocs/org/noos/xing/mydoggy/ToolWindowType.html">
                    <code>ToolWindowType.SLIDING</code>
                </a>
                <p>
                    When SLIDING type is used, the tool window overlaps the main frame and/or other tool
                    windows.
                    When it loses focus, the tool window hides itself.
                    <br/>To set
                    <code>ToolWindowType.SLIDING</code>
                    type use the following:
                </p>
                <source>toolWindow.setType(ToolWindowType.SLIDING);</source>
                <p>
                    To get a
                    <a href="./apidocs/org/noos/xing/mydoggy/SlidingTypeDescriptor.html">
                        <code>SlidingTypeDescriptor</code>
                    </a>
                    instance use the following:
                </p>
                <source>SlidingTypeDescriptor descriptor =
    toolWindow.getTypeDescriptor(SlidingTypeDescriptor.class);</source>
            </subsection>

            <subsection name="Floating">
                <img src="../images/api/types/floating.png" alt="docked" border="0" hspace="18" align="left"/>

                <a href="./apidocs/org/noos/xing/mydoggy/ToolWindowType.html">
                    <code>ToolWindowType.FLOATING</code>
                </a>
                <p>
                This type enables a tool window to be detached from the main window frame.
                When Floating type is used, the tool window detaches to the position where it was last
                floated
                (or screen center or location used in toolwindow's
                <a href="./apidocs/org/noos/xing/mydoggy/FloatingTypeDescriptor.html">
                    <code>FloatingTypeDescriptor</code>
                </a>
                , if never before floated)

                <br/>To set
                <code>ToolWindowType.FLOATING</code>
                type use the following:
                </p>
                <source>toolWindow.setType(ToolWindowType.FLOATING);</source>
                <p>
                    To get a
                    <a href="./apidocs/org/noos/xing/mydoggy/FloatingTypeDescriptor.html">
                        <code>FloatingTypeDescriptor</code>
                    </a>
                    instance use the following:
                </p>
                <source>
FloatingTypeDescriptor typeDescriptor = (FloatingTypeDescriptor)
    toolWindow.getTypeDescriptor(ToolWindowType.FLOATING);
                </source>
            </subsection>

            <subsection name="Floating Free">
                <img src="../images/api/types/floatingFree.png" alt="docked" border="0" hspace="18" align="left"/>

                <a href="./apidocs/org/noos/xing/mydoggy/ToolWindowType.html">
                    <code>ToolWindowType.FLOATING_FREE</code>
                </a>
                - This type differs from
                <code>FLOATING</code>
                type for the absence of the representative button
                on the tool window bar.

                <br/>To set
                <code>ToolWindowType.FLOATING_FREE</code>
                type use the following:
                <source>toolWindow.setType(ToolWindowType.FLOATING_FREE);</source>

                <p>
                </p>
            </subsection>

            <subsection name="Flaoting Live">
                <img src="../images/api/types/floatingLive.png" alt="docked" border="0" hspace="18" align="left"/>

                <a href="./apidocs/org/noos/xing/mydoggy/ToolWindowType.html">
                    <code>ToolWindowType.FLOATING_LIVE</code>
                </a>
                - This type enables a tool to be floating in the frame rather than having
                floating windows "out of the frame".

                <br/>To set
                <code>ToolWindowType.FLOATING_LIVE</code>
                type use the following:
                <source>toolWindow.setType(ToolWindowType.FLOATING_LIVE);</source>
                <a href="./apidocs/org/noos/xing/mydoggy/FloatingLiveTypeDescriptor.html">
                    <code>FloatingLiveTypeDescriptor</code>
                </a>
                - This interface is used to modify the behaviours of
                <code>FLOATING_LIVE</code>
                type.

                <br/>To get a
                <code>FloatingLiveTypeDescriptor</code>
                instance use the following:
                <source>
FloatingLiveTypeDescriptor typeDescriptor = (FloatingLiveTypeDescriptor)
toolWindow.getTypeDescriptor(ToolWindowType.FLOATING_LIVE);
                </source>
            </subsection>

        </section>

        <a name="ToolWindowGroup"/>
        <section name="What is a ToolWindowGroup">
            <p>
                The idea is to provide the same mechanism of the prospectives from eclipse ide for toolwindows.
                The typical usage is to retrieve a group from the tool window manager and to add any toolwindows
                one wants.
                After that we can show or hide all tools registered in that group.
            </p>

            <table>
                <tbody>
                    <tr>
                        <td>
                            <img src="../images/api/toolWindowGroup_1.png" alt="ToolWindowGroup" border="0" hspace="18"/>
                        </td>
                        <td>
                            <p>
                                To obtain an instance of <code>ToolWindowGroup</code> interface use the following:
                            </p>
                            <source>ToolWindowManager toolWindowManager = new <a href="./../mydoggy-plaf/index.html">...</a>;
ToolWindowGroup group = toolWindowManager
             .getToolWindowGroup(
                 "main"  // ToolWindowGroup name
              );</source>
                            <p>
                                If the manager contains no mapping for name passed to the
                                <code>getToolWindowGroup</code>
                                method then
                                the manager create a new instance of ToolWindowGroup and associate the group created
                                with the specified name in the manager.
                                <br/>
                                After that, you can populate the group.
                            </p>
                            <source>mainGroup.addToolWindow(
             toolWindowManager.getToolWindow(0)
          );</source>
                            <p>
                                To show or hide a group use the following:
                            </p>
                            <source>mainGroup.setVisible(
             true   // true to show, false to hide
          );</source>
                        </td>
                    </tr>
                </tbody>
            </table>
        </section>

        <a name="ToolWindowAction"/>
        <section name="What is a ToolWindowAction?">

        </section>


        <a name="PersistenceDelegate"/>
        <section name="PersistenceDelegate">
            <p>
                This interface provides useful methods to save and load the tool window manager's workspace.
                When you request to save the workspace, all settings of ToolWindows with relative descriptors are saved.
                To obtain an instance of PersistenceDelegate you have to invoke the method
                <code>getPersistenceDelegate</code>
                of
                <code>ToolWindowManager</code>
                interface. So you can obtain a persistence delegate specific to a
                particular tool window manager.
            </p>
            <p>
                When you request to save the workspace, all settings of toolwindows, and not only, with relative descriptors are saved.
                See the specific DTD, relative to the version of mydoggy that you are using, to know all information saved.
                <br/>

                To obtain the instance of the PersistenceDelegate for a specific ToolWindowManager use the following:
            </p>
            <source>PersistenceDelegate pstDelegate = twManager.getPersistenceDelegate();</source>

            <p>
                MyDoggy arrives with a default implementation provided by
                <br/>
                <code>org.noos.xing.mydoggy.plaf.persistence.xml.XMLPersistenceDelegate</code>
                <br/>
                This implementation use the xml format to store all necessary data.
            </p>
        </section>


    </body>
</document>
