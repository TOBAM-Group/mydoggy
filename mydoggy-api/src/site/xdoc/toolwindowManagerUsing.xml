<!DOCTYPE document PUBLIC
        "-//Apache Software Foundation//DTD XDOC 1.0//EN"
        "http://maven.apache.org/dtd/xdoc_1_0.dtd">
<document>
    <properties>
        <title>MyDoggy-Api : ToolWindowManager Using</title>
        <author email="adecaro@users.sourceforge.net">Angelo De Caro</author>
    </properties>

    <body>
        <section name="Using ToolWindowManager">
            <subsection name="Getting a new ToolWindowManager instance">
                Use the following :
                <source>ToolWindowManager toolWindowManager = new <a href="./../mydoggy-plaf/index.html">MyDoggyToolWindowManager(...)</a>;</source>
            </subsection>
        </section>
        <section name="Using ToolWindowManagerDescriptor">
            <subsection name="ToolWindowManagerDescriptor">
                <p>
                    To obtain the instance of the ToolWindowManagerDescriptor for a specific ToolWindowManager use the following:
                </p>
                <source>
ToolWindowManagerDescriptor toolWindowManagerDescriptor = toolWindowManager.getToolWindowManagerDescriptor();</source>
            </subsection>
            <subsection name="ToolWindowManagerDescriptor - PushAwayMode">
                <p>
                    After you have obtained an instance of the ToolWindowManagerDescriptor for a specific ToolWindowManager use
                    the following to change to PushAwayMode:
                </p>
                <source>
ToolWindowManagerDescriptor toolWindowManagerDescriptor = toolWindowManager.getToolWindowManagerDescriptor();
toolWindowManagerDescriptor.setPushAwayMode(PushAwayMode.HORIZONTAL); // Or PushAwayMode.VERTICAL</source>
                <p>
                    To retrieve the current PushAwayMode use the following:
                </p>
                <source>
ToolWindowManagerDescriptor toolWindowManagerDescriptor = toolWindowManager.getToolWindowManagerDescriptor();
PushAwayMode pushAwayMode = toolWindowManagerDescriptor.getPushAwayMode();</source>
            </subsection>
        </section>
        <section name="Using PersistenceDelegate">
            <subsection name="PersistenceDelegate">
                <p>
                    To obtain the instance of the PersistenceDelegate for a specific ToolWindowManager use the following:
                </p>
                <source>PersistenceDelegate persistenceDelegate = toolWindowManager.getPersistenceDelegate();</source>
            </subsection>
            <subsection name="PersistenceDelegate - Store Workspace">
                <p>
                    After you have obtained an instance of the PersistenceDelegate for a specific ToolWindowManager use
                    the following to store the workspace:
                </p>
                <source>PersistenceDelegate persistenceDelegate = toolWindowManager.getPersistenceDelegate();
try {
    FileOutputStream output = new FileOutputStream("workspace.xml");
    toolWindowManager.getPersistenceDelegate().save(output);
    output.close();
} catch (Exception e) {
    e.printStackTrace();
}</source>
            </subsection>
            <subsection name="PersistenceDelegate - Apply stored Workspace">
                <p>
                    After you have obtained an instance of the PersistenceDelegate for a specific ToolWindowManager use
                    the following to apply a saved workspace to the current workspace:
                </p>
                <source>PersistenceDelegate persistenceDelegate = toolWindowManager.getPersistenceDelegate();
try {
    FileInputStream inputStream = new FileInputStream("workspace.xml");
    toolWindowManager.getPersistenceDelegate().apply(inputStream);
    inputStream.close();
} catch (Exception e1) {
    e1.printStackTrace();
}</source>
            </subsection>
        </section>
    </body>
</document>
