<!DOCTYPE document PUBLIC
        "-//Apache Software Foundation//DTD XDOC 1.0//EN"
        "http://maven.apache.org/dtd/xdoc_1_0.dtd">
<document>
    <properties>
        <title>MyDoggy - My Java Docking Framework (PLAF) : ResourceManager Using</title>
        <author email="adecaro@users.sourceforge.net">Angelo De Caro</author>
    </properties>

    <body>
        <section name="Using ResourceManager">
            <p>
            Here are some examples that show how to customize mydoggy. Remember to obtain an instance of ResourceManager
            you can use the following:
            </p>
            <source xml:space="preserve">
MyDoggyToolWindowManager toolWindowManager = new MyDoggyToolWindowManager(...);
ResourceManager resourceManager = toolWindowManager.getResourceManager();</source>
            <p>
                Look at this page to understand at what i'm referring when i write TitleBar, ToolWindowTab, etc.. 
            </p>

            <subsection name="Supported properties">
                <p>
                   You can use the following code to set a property value:
                </p>
                <source>
resourceManager.putProperty("drag.icon.transparency.enabled", "false");
</source>
                <p>
                    Here is a list of supported properties.
                </p>
                <table>
                    <thead>
                        <tr>
                            <td>
                                Name
                            </td>
                            <td>
                                Type
                            </td>
                            <td>
                                Description
                            </td>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>
                                drag.icon.transparency.enabled
                            </td>
                            <td>
                                boolean
                            </td>
                            <td>
                                Used to enable or disable the transparency of the drag icon.
                            </td>
                        </tr>
                        <tr>
                            <td>
                                drag.icon.useDefault
                            </td>
                            <td>
                                boolean
                            </td>
                            <td>
                                Used to enable or disable the use of a simple icon instead of a more complex one during
                                the a drag phase.
                            </td>
                        </tr>
                        <tr>
                            <td>
                                ContentManagerUI.ContentManagerUiListener.import
                            </td>
                            <td>
                                boolean
                            </td>
                            <td>
                                Used to enable or disable the import of all listeners from an unmounting ContentManageUI
                                to the new mmounted ContentManagerUI.
                            </td>
                        </tr>
                        <tr>
                            <td>
                                drag.toolwindow.asTab
                            </td>
                            <td>
                                boolean
                            </td>
                            <td>
                                Used to enable or disable dragging of toolwindows as tabs.
                            </td>
                        </tr>
                    </tbody>
                </table>
            </subsection>

            <subsection name="Change TitleBar Background Colors">
                <table>
                    <tbody>
                        <tr>
                            <td>
                                <img src="./images/resourceManager/titleBarBackgroundColors.png" alt="TitleBar Background Colors" border="0" hspace="18"/>
                            </td>
                            <td>
                                <p>You can use the following code:</p>
                                <source>
import org.noos.xing.mydoggy.plaf.ui.MyDoggyKeySpace;

....

resourceManager.putColor(MyDoggyKeySpace.TWTB_BACKGROUND_ACTIVE_START, Color.BLUE);
resourceManager.putColor(MyDoggyKeySpace.TWTB_BACKGROUND_ACTIVE_END, Color.GREEN);
resourceManager.putColor(MyDoggyKeySpace.TWTB_BACKGROUND_INACTIVE_START, Color.BLACK);
resourceManager.putColor(MyDoggyKeySpace.TWTB_BACKGROUND_INACTIVE_END, Color.GREEN.darker());
                                </source>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </subsection>
            <subsection name="Change ToolWindowTab Foreground Colors">
                <table>
                    <tbody>
                        <tr>
                            <td>
                                <img src="./images/resourceManager/toolWindowTabForegroundColors.png" alt="ToolWindowTab Foreground Colors" border="0" hspace="18"/>
                            </td>
                            <td>
                                <p>You can use the following code:</p>
                                <source>
import org.noos.xing.mydoggy.plaf.ui.MyDoggyKeySpace;

....

resourceManager.putColor(MyDoggyKeySpace.TWTB_TAB_FOREGROUND_SELECTED, Color.GREEN);
resourceManager.putColor(MyDoggyKeySpace.TWTB_TAB_FOREGROUND_UNSELECTED, Color.DARK_GRAY);
                </source>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </subsection>
            <subsection name="Change Representative Anchor Button Background Colors">
                <table>
                    <tbody>
                        <tr>
                            <td>
                                <img src="./images/resourceManager/representativeAnchorButtonBackgroundColors.png" alt="Representative Anchor Button Background Colors" border="0" hspace="18"/>
                            </td>
                            <td>
                                <p>You can use the following code:</p>
                                <source>
import org.noos.xing.mydoggy.plaf.ui.MyDoggyKeySpace;

....

resourceManager.putColor(MyDoggyKeySpace.RAB_BACKGROUND_ACTIVE_START, Color.RED);
resourceManager.putColor(MyDoggyKeySpace.RAB_BACKGROUND_ACTIVE_END, Color.ORANGE);
                </source>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </subsection>
            <subsection name="Change Representative Anchor Button Foreground Color">
                <table>
                    <tbody>
                        <tr>
                            <td>
                                <img src="./images/resourceManager/representativeAnchorButtonForegroundColor.png" alt="Representative Anchor Button Foreground Color" border="0" hspace="18"/>
                            </td>
                            <td>
                                <p>You can use the following code:</p>
                                <source>
import org.noos.xing.mydoggy.plaf.ui.MyDoggyKeySpace;

....
                                    
resourceManager.putColor(MyDoggyKeySpace.RAB_FOREGROUND, Color.BLUE);
</source>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </subsection>
            <subsection name="Change TitleBar Button Icons">
                You can use the following code:
                <source>
resourceManager.putIcon(MyDoggyKeySpace.DOCKED, new Icon(...));
</source>
            </subsection>
        </section>

        <section name="Using MyDoggyResourceManager - A more deep customization">
            <p>
            Here are some examples that show how to customize in a more deep way mydoggy. To obtain an instance
            of MyDoggyResourceManager you can use the following:
            </p>
            <source xml:space="preserve">
MyDoggyToolWindowManager toolWindowManager = new MyDoggyToolWindowManager(...);
MyDoggyResourceManager myDoggyResourceManager = (MyDoggyResourceManager) toolWindowManager.getResourceManager();</source>
            
            <subsection name="Change TitleBar UI">
                <table>
                    <tbody>
                        <tr>
                            <td>
                                <img src="./images/resourceManager/titleBarUI.png" alt="TitleBar UI" border="0" hspace="18"/>
                            </td>
                            <td>
                                <p> As you can see, now the gradient direction has changed and instead of an arc there
                                    is a arrow.
                                </p>
                                <p>You can use the following code:</p>
                                <source>
import org.noos.xing.mydoggy.plaf.ui.MyDoggyKeySpace;
import org.noos.xing.mydoggy.plaf.ui.look.ToolWindowTitleBarUI;
import org.noos.xing.mydoggy.plaf.ui.ToolWindowDescriptor;
import org.noos.xing.mydoggy.plaf.ui.ToolWindowContainer;
import org.noos.xing.mydoggy.plaf.ui.util.GraphicsUtil;
import org.noos.common.context.Context;
import org.noos.common.object.ObjectCreator;

...

myDoggyResourceManager.putComponentUICreator(MyDoggyKeySpace.TOOL_WINDOW_TITLE_BAR_UI,
 new ObjectCreator&lt;ComponentUI&gt;() {
     public ComponentUI create(Context context) {
         return new ToolWindowTitleBarUI(context.get(ToolWindowDescriptor.class) ,
                                         context.get(ToolWindowContainer.class)) {
             protected void updateToolWindowTitleBar(Graphics g, JComponent c, Color backgroundStart, Color backgroundEnd, Color idBackgroundColor, Color idColor) {
                 Rectangle r = c.getBounds();
                 r.x = r.y = 0;

                 GraphicsUtil.fillRect(g, r,
                                       backgroundStart, backgroundEnd,
                                       null,
                                       GraphicsUtil.LEFT_TO_RIGHT_GRADIENT);

                 if (descriptor.getDockedTypeDescriptor().isIdVisibleOnTitleBar() ||
                     toolWindow.getType() == ToolWindowType.FLOATING ||
                     toolWindow.getType() == ToolWindowType.FLOATING_FREE ||
                     toolWindow.getType() == ToolWindowType.FLOATING_LIVE) {

                     String id = resourceManager.getUserString(descriptor.getToolWindow().getId());
                     r.width = g.getFontMetrics().stringWidth(id) + 8;

                     int halfHeigh = (r.height / 2);
                     GraphicsUtil.fillRect(g, r,
                                           Color.WHITE,
                                           idBackgroundColor,
                                           new Polygon(new int[]{r.x, r.x + r.width - halfHeigh, r.x + r.width - halfHeigh, r.x},
                                                       new int[]{r.y, r.y, r.y + r.height, r.y + r.height},
                                                       4),
                                           GraphicsUtil.LEFT_TO_RIGHT_GRADIENT);


                     Polygon polygon = new Polygon();
                     polygon.addPoint(r.x + r.width - halfHeigh, r.y);
                     polygon.addPoint(r.x + r.width - halfHeigh + 8, r.y + (r.height / 2));
                     polygon.addPoint(r.x + r.width - halfHeigh, r.y + r.height);

                     GraphicsUtil.fillRect(g, r,
                                           Color.WHITE,
                                           idBackgroundColor,
                                           polygon,
                                           GraphicsUtil.LEFT_TO_RIGHT_GRADIENT);

                     g.setColor(idColor);
                     g.drawString(id, r.x + 2, r.y + g.getFontMetrics().getAscent());
                 }
             }
         };
     }
 });</source>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </subsection>

            <subsection name="Change TitleBar Buttons disposition">
                  <table>
                      <tbody>
                          <tr>
                              <td>
                                  <img src="./images/resourceManager/titleBarButtonsDisposition.png" alt="TitleBar Buttons disposition" border="0" hspace="18"/>
                              </td>
                              <td>
                                  <p>As use can see, now we have two buttons. One is the hide buttone, the other is
                                      a special button, if the user clicks on it then a popup menu is shown with all
                                      available actions.
                                  </p>
                                  <p>You can use the following code:</p>
                                  <source>
import org.noos.xing.mydoggy.plaf.ui.TitleBarButtons;
import org.noos.xing.mydoggy.plaf.ui.ToolWindowDescriptor;
import org.noos.xing.mydoggy.plaf.ui.ToolWindowContainer;
import org.noos.xing.mydoggy.plaf.ui.util.GraphicsUtil;
import org.noos.common.context.Context;
import org.noos.common.object.ObjectCreator;
import org.noos.xing.mydoggy.plaf.ui.cmp.MenuTitleBarButtons;

...

myDoggyResourceManager.putInstanceCreator(TitleBarButtons.class,
    new ObjectCreator() {
        public Object create(Context context) {
            return new MenuTitleBarButtons(
                    context.get(ToolWindowDescriptor.class),
                    context.get(ToolWindowContainer.class)
            );
        }
    });</source>
                              </td>
                          </tr>
                      </tbody>
                  </table>
              </subsection>
              
        </section>

    </body>
</document>
